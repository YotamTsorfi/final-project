{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/ranger.service.ts","webpack:///./src/app/rangers/rangers.component.css","webpack:///./src/app/rangers/rangers.component.html","webpack:///./src/app/rangers/rangers.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DashboardComponent }   from './dashboard/dashboard.component';\nimport { RangersComponent }      from './rangers/rangers.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'rangers', component: RangersComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","module.exports = \"/* h1 {\\r\\n  font-size: 1.2em;\\r\\n  color: #999;\\r\\n  margin-bottom: 0;\\r\\n}\\r\\nh2 {\\r\\n  font-size: 2em;\\r\\n  margin-top: 0;\\r\\n  padding-top: 0;\\r\\n}\\r\\nnav a {\\r\\n  padding: 5px 10px;\\r\\n  text-decoration: none;\\r\\n  margin-left: 100px;\\r\\n  margin-top: 10px;\\r\\n  display: inline-block;\\r\\n  background-color: #eee;\\r\\n  border-radius: 40px;\\r\\n}\\r\\nnav a:visited, a:link {\\r\\n  color: #607d8b;\\r\\n}\\r\\nnav a:hover {\\r\\n  color: #039be5;\\r\\n  background-color: #cfd8dc;\\r\\n}\\r\\nnav a.active {\\r\\n  color: #039be5;\\r\\n}\\r\\nimg {\\r\\n  height: 100px;\\r\\n} */\\r\\n\"","module.exports = \"<img src=\\\"../assets/img/theClan.jpg\\\">\\n<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/dashboard\\\">Dashboard</a>\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/rangers\\\">Rangers</a>\\n    </div>\\n  </div>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'The Rangers';\n}\n","import { NgModule }       from '@angular/core';\nimport { BrowserModule }  from '@angular/platform-browser';\nimport { FormsModule }    from '@angular/forms';\nimport { HttpClientModule }    from '@angular/common/http';\n\nimport { AppRoutingModule }     from './app-routing.module';\n\nimport { AppComponent }         from './app.component';\nimport { DashboardComponent }   from './dashboard/dashboard.component';\nimport { RangersComponent }      from './rangers/rangers.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n    // HttpClientInMemoryWebApiModule.forRoot(\n    //   InMemoryDataService, { dataEncapsulation: false }\n    // )\n  ],\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    RangersComponent\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","module.exports = \"/* DashboardComponent's private CSS styles */\\r\\n[class*='col-'] {\\r\\n  float: left;\\r\\n  padding-right: 20px;\\r\\n  padding-bottom: 20px;\\r\\n}\\r\\n[class*='col-']:last-of-type {\\r\\n  padding-right: 0;\\r\\n}\\r\\na {\\r\\n  text-decoration: none;\\r\\n}\\r\\n*, *:after, *:before {\\r\\n  box-sizing: border-box;\\r\\n}\\r\\nh3 {\\r\\n  text-align: center; margin-bottom: 0;\\r\\n}\\r\\nh4 {\\r\\n  position: relative;\\r\\n}\\r\\n.grid {\\r\\n  margin: 0;\\r\\n}\\r\\n.col-1-4 {\\r\\n  width: 25%;\\r\\n}\\r\\n.module {\\r\\n  padding: 20px;\\r\\n  text-align: center;\\r\\n  color: #eee;\\r\\n  max-height: 120px;\\r\\n  min-width: 120px;\\r\\n  /* background-color: #607d8b; */\\r\\n  border-radius: 2px;\\r\\n}\\r\\n.module:hover {\\r\\n  /* background-color: #eee; */\\r\\n  cursor: pointer;\\r\\n  color: #607d8b;\\r\\n}\\r\\n.grid-pad {\\r\\n  padding: 10px 0;\\r\\n}\\r\\n.grid-pad > [class*='col-']:last-of-type {\\r\\n  padding-right: 20px;\\r\\n}\\r\\n@media (max-width: 600px) {\\r\\n  .module {\\r\\n    font-size: 10px;\\r\\n    max-height: 75px; }\\r\\n}\\r\\n@media (max-width: 1024px) {\\r\\n  .grid {\\r\\n    margin: 0;\\r\\n  }\\r\\n  .module {\\r\\n    min-width: 60px;\\r\\n  }\\r\\n}\\r\\n\"","module.exports = \"<h3>Top Rangers</h3>\\n<div class=\\\"grid grid-pad\\\">\\n  <a *ngFor=\\\"let ranger of rangers\\\" class=\\\"col-1-4\\\">\\n    <div class=\\\"module ranger\\\">\\n      <img src={{ranger.img}}>\\n      <h4>{{ranger.name}}</h4> with {{ranger.numOfTrees}} trees\\n    </div>\\n  </a>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Ranger } from '../ranger';\nimport { RangerService } from '../ranger.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: [ './dashboard.component.css' ]\n})\nexport class DashboardComponent implements OnInit {\n  rangers: Ranger[] = [];\n\n  constructor(private rangerService: RangerService) { }\n\n  ngOnInit() {\n    this.getRangers();\n  }\n\n  getRangers(): void {\n    this.rangerService.getRangers()\n      .subscribe(rangers => this.rangers = rangers.slice(1, 5));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Ranger } from './ranger';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({ providedIn: 'root' })\nexport class RangerService {\n\n  private rangersUrl = \"http://localhost:3000/api/rangers/\";  // URL to web api\n\n  constructor(\n    private http: HttpClient) { }\n\n  /** GET rangers from the server */\n  getRangers (): Observable<Ranger[]> {\n    return this.http.get<Ranger[]>(this.rangersUrl)\n      .pipe(\n        catchError(this.handleError('getRangers', []))\n      );\n  }\n\n  /** GET ranger by id. Return `undefined` when id not found */\n  getRangerNo404<Data>(id: number): Observable<Ranger> {\n    const url = `${this.rangersUrl}/?id=${id}`;\n    return this.http.get<Ranger[]>(url)\n      .pipe(\n        map(rangers => rangers[0]), // returns a {0|1} element array\n        tap(h => {\n          const outcome = h ? `fetched` : `did not find`;\n        }),\n        catchError(this.handleError<Ranger>(`getRanger id=${id}`))\n      );\n  }\n\n  /** GET Ranger by id. Will 404 if id not found */\n  getBook(id: number): Observable<Ranger> {\n    const url = `${this.rangersUrl}/${id}`;\n    return this.http.get<Ranger>(url).pipe(\n      catchError(this.handleError<Ranger>(`getRanger id=${id}`))\n    );\n  }\n  \n    /** POST: report num of trees to the server*/\n    reportTrees (ranger: Ranger): Observable<Ranger> {\n      const reportTreesUrl = \"http://localhost:3000/api/ranger\";\n      \n      console.log(\"post report trees\");\n      return this.http.post<Ranger>('http://localhost:3000/api/ranger', ranger, httpOptions).pipe(\n        catchError(this.handleError<Ranger>('report num of trees'))\n      );\n     \n    }\n\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      // console.error(error); // log to console instead\n      console.log(error);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","module.exports = \"/* .rangers {\\r\\n  margin: 0 0 2em 0;\\r\\n  list-style-type: none;\\r\\n  padding: 0;\\r\\n  width: 23em;\\r\\n}\\r\\n.rangers li {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  background-color: #EEE;\\r\\n  margin: .5em;\\r\\n  padding: .3em 0;\\r\\n  height: 1.6em;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\n.rangers li:hover {\\r\\n  color: #607D8B;\\r\\n  background-color: #DDD;\\r\\n  left: .1em;\\r\\n}\\r\\n\\r\\n.rangers a {\\r\\n  color: #888;\\r\\n  text-decoration: none;\\r\\n  position: relative;\\r\\n  display: block;\\r\\n  width: 400px;\\r\\n}\\r\\n\\r\\n.rangers a:hover {\\r\\n  color:#607D8B;\\r\\n}\\r\\n\\r\\n.rangers .badge {\\r\\n  display: inline-block;\\r\\n  font-size: small;\\r\\n  color: white;\\r\\n  padding: 0.8em 0.7em 0 0.7em;\\r\\n  background-color: #607D8B;\\r\\n  line-height: 1em;\\r\\n  position: relative;\\r\\n  left: -1px;\\r\\n  top: -4px;\\r\\n  height: 1.8em;\\r\\n  min-width: 16px;\\r\\n  text-align: right;\\r\\n  margin-right: .8em;\\r\\n  border-radius: 4px 0 0 4px;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  background-color: #eee;\\r\\n  border: none;\\r\\n  padding: 5px 10px;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n  cursor: hand;\\r\\n  font-family: Arial;\\r\\n}\\r\\n\\r\\nbutton:hover {\\r\\n  background-color: #cfd8dc;\\r\\n}\\r\\n\\r\\nbutton.delete {\\r\\n  position: relative;\\r\\n  left: 320px;\\r\\n  top: -32px;\\r\\n  background-color: gray !important;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n */\"","module.exports = \"<h2>My Rangers</h2>\\n<ul class=\\\"list-group\\\">\\n  <li  *ngFor=\\\"let ranger of rangers\\\" class=\\\"list-group-item d-flex justify-content-between align-items-center\\\" >\\n    <img src={{ranger.img}}>\\n    <span class=\\\"badge\\\">{{ranger.id}}</span><h3> {{ranger.name}} Trees {{ranger.numOfTrees}}</h3> <img src=\\\"assets/img/tree.bmp\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"addTree(ranger)\\\">+</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"reportTrees(ranger)\\\">report trees</button>\\n\\n  </li>\\n</ul>\"","import { Component, OnInit } from '@angular/core';\nimport { Ranger } from '../ranger';\nimport { RangerService } from '../ranger.service';\n\n@Component({\n  selector: 'app-rangers',\n  templateUrl: './rangers.component.html',\n  styleUrls: ['./rangers.component.css']\n})\nexport class RangersComponent implements OnInit {\n  rangers: Ranger[];\n\n  constructor(private rangerService: RangerService) { }\n\n  ngOnInit() {\n    this.getRangers();\n  }\n\n  getRangers(): void {\n    this.rangerService.getRangers()\n      .subscribe(rangers => this.rangers = rangers);\n  }\n\n  addTree(ranger: Ranger){\n    ranger.numOfTrees++;\n  }\n    \n  reportTrees(ranger: Ranger) {\n    this.rangerService.reportTrees(ranger).subscribe(param =>{\n      console.log('test', param);\n    });\n    ranger.numOfTrees = 0;\n    console.log(ranger.img);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}